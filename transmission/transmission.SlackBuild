#!/bin/sh
# Slackware build script for transmission

# Copyright 2007 Vasilis Papavasileiou <el03020 at mail dot ntua dot gr>
# Copyright 2008-2011 Iskar Enev <iskar.enev[@]gmail.com>
# Copyright 2011-2013 Niels Horn, Rio de Janeiro, Brazil
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Revision date: 2014/08/28
# Revision date: 2015/01/16  FORK FORK FORK THIS IS A KaMii-fied Fork!

# HOMEPAGE="http://https://www.transmissionbt.com/"

#Variables

PRGNAM=transmission
BUILD=${BUILD:-1}
TAG=${TAG:-_KaMii}
DOWNLOAD="https://transmission.cachefly.net/transmission-2.84.tar.xz"

DOCS="AUTHORS COPYING INSTALL NEWS README"

##
## DO NOT EDIT BELOW THIS LINE UNLESS YOU KNOW WHAT YOU ARE DOING ##
##                     YOU HAVE BEEN WARNED                       ##
##                        NSA IS WATCHING                         ##
##

# Automatically determine the architecture we're building on:

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}
TARBALL=$( basename $DOWNLOAD)
MD5="411aec1c418c14f6765710d89743ae42"
MARCH=$( uname -m )
if [ -z "$ARCH" ]; then
  case "$MARCH" in
    i?86)    export ARCH=i486 ;;
    armv7hl) export ARCH=$MARCH ;;
    armv6hl) export ARCH=$MARCH ;;
    arm*)    export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
    *)       export ARCH=$MARCH ;;
  esac
fi

case "$ARCH" in
  i486)      SLKCFLAGS="-O2 -march=i486 -mtune=i686"
             SLKLDFLAGS=""; LIBDIRSUFFIX=""
             ;;
  x86_64)    SLKCFLAGS="-O2 -fPIC"
             SLKLDFLAGS="-L/usr/lib64"; LIBDIRSUFFIX="64"
             ;;
  armv7hl)   SLKCFLAGS="-O2 -march=armv7-a -mfpu=vfpv3-d16"
             SLKLDFLAGS=""; LIBDIRSUFFIX=""
             ;;
  armv6hl)   SLKCFLAGS="-O2 -march=armv6 -mfpu=vfp -mfloat-abi=hard"
             SLKLDFLAGS=""; LIBDIRSUFFIX=""
             ;;
  *)         SLKCFLAGS="-O2"
             SLKLDFLAGS=""; LIBDIRSUFFIX=""
             ;;
esac

case "ARCH" in
    arm*)    TARGET=$ARCH-slackware-linux-gnueabi ;;
    *)       TARGET=$ARCH-slackware-linux ;;
esac

# Download and verify source
if [ ! -e $TARBALL ]; then wget $DOWNLOAD; fi
SUM=$( md5sum $TARBALL | cut -d' ' -f1 )
if [ "$MD5" != "$SUM" ]; then echo "Checksum doesn't match, aborting"; exit 1; 
  else
	  echo "Source file verified."
fi
sleep 2
VERSION=${VERSION:-$(echo $PRGNAM-*.tar.?z* | rev | cut -f 3- -d . | cut -f 1 -d - | rev)}

# Prepare build location
set -e
rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP || exit 1
rm -rf $PRGNAM-$VERSION

# Untar source
tar xvf $CWD/$TARBALL || exit 1
cd $PRGNAM-$VERSION || exit 1

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

sed -i -e 's%-g -O3 -funroll-loops %%g' configure.ac
sed -i -e 's%-ggdb3 %%g' configure.ac

# Fix hard-coded path of man file of Qt client
sed -i "s|share/man/|man/|" qt/qtr.pro

# Needed when using Qt4
# https://trac.transmissionbt.com/ticket/5700#comment:2
 echo "QMAKE_CXXFLAGS += -std=c++11" >> qt/qtr.pro

# Thanks Larry Hajali
autoreconf -ivf

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --disable-static \
  --without-gtk \
  --verbose \
  --build=$ARCH-slackware-linux \
  --host=$ARCH-slackware-linux

# build daemon and cli client
make
make install DESTDIR=$PKG

# build the Qt client (transmission-qt)
cd $TMP/$PRGNAM-$VERSION/qt
  qmake-qt5 \
    QMAKE_CXXFLAGS+="$SLKCFLAGS" \
    QMAKE_CFLAGS+="$SLKCFLAGS" \
    qtr.pro
  sed -i -e 's% -g % %g' Makefile
  make
  INSTALL_ROOT=$PKG/usr make install
  mkdir -p $PKG/usr/share/applications
  mkdir -p $PKG/usr/share/pixmaps
  install -m644 $TMP/$PRGNAM-$VERSION/qt/transmission-qt.desktop $PKG/usr/share/applications/transmission-qt.desktop
  install -m644 $TMP/$PRGNAM-$VERSION/qt/icons/transmission.png $PKG/usr/share/pixmaps/transmission-qt.png
cd -

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a $DOCS $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
