#!/bin/sh
#
# Slackware build script for wine-staging.
#
# Copyright 2016-2017  Edinaldo P. Silva, Rio de Janeiro, Brazil.
# Copyright 2015 Gethyn ThomasQuail <gethyn@bloodbathsoftworks.com>
#
# All rights reserved.
#
# Based on:
# Wine SlackBuild by David Woodfall Copyright 2011
# Some elements from Wine Slackbuilds by Eric Hameleers < alien@slackware.com >
# and PhantomX, Goiania, Brazil < https://github.com/PhantomX >.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# FORK!
# Herp-a-dErP!
# Previous dude linked to a zip file off github...
# I just git clone latest because, its wine-staging!  like... wtf dude?
# Facepalm!
# KaMii is your goddess!
# HOMEPAGE="https://github.com/wine-compholio"

# Variables

PRGNAM=wine-staging-patched
DATE=$(date +%Y%m%d)
VERSION=${VERSION:-git$DATE}
BUILD=${BUILD:-1}
TAG=${TAG:-_KaMii}
DOWNLOAD="https://github.com/wine-compholio/wine-patched"
DOCS="ANNOUNCE AUTHORS COPYING.LIB LICENSE* MAINTAINERS README VERSION"
FONTS_LICENSE="COPYING.arial COPYING.cour COPYING.msyh COPYING.times"

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

# If your video card does not support hardware accelerated OpenGL,
# run the script like:   OPENGL=NO ./wine.SlackBuild
OPENGL=${OPENGL:-YES}

##
## DO NOT EDIT BELOW THIS LINE UNLESS YOU KNOW WHAT YOU ARE DOING ##
##                     YOU HAVE BEEN WARNED                       ##
##                        NSA IS WATCHING                         ##
##

# Automatically determine the architecture we're building on:

# If OPENGL=YES above, then enable opengl; otherwise, disable it.
if [ "$OPENGL" = "YES" ]; then
    do_opengl="with"
  else
    do_opengl="without"
fi

if [ -z "$ARCH" ]; then
	case "$(uname -m)" in
		i?86) ARCH=i586 ;;
		arm*) ARCH=arm ;;
		*) ARCH=$(uname -m) ;;
	esac
fi

if [ -n "$NOWIN32" ] && [ -z "$WIN64" ]; then
	echo "Both 64 and 32 bit builds disabled. Nothing to do."
	exit 1
fi

# These should work for anything not specified below
BUILD_ARCH=$ARCH"-slackware-linux"
SLKCFLAGS="-O2"

case "$ARCH" in
	arm)
		BUILD_ARCH=$ARCH"-slackware-linux-gnueabi"
		;;
	i?86)
		# -Os was -O2, fix for:
		# https://bugs.winehq.org/show_bug.cgi?id=42406
		# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78911
		# https://bugs.gentoo.org/613128
		SLKCFLAGS="-Os -march=$ARCH -mtune=i686"
		;;
	x86_64)
		[ -n "$WIN64" ] && WIN64="--enable-win64"
		SLKCFLAGS="-O2 -fPIC"
		LIBDIRSUFFIX="64"
		;;
esac

# Prepare build location

set -e
rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION

# Clone source
git clone $DOWNLOAD  $TMP/$PRGNAM-$VERSION || exit 1
cd $PRGNAM-$VERSION || exit 1

# Set permissions

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Time to compile this source code

if [ -n "$WIN64" ]; then
	wine64="--with-wine64=../wine64"
	mkdir wine64
	cd wine64

	LDFLAGS="-L/usr/lib64 -ldl" \
	CFLAGS="$SLKCFLAGS" \
	CXXFLAGS="$SLKCFLAGS" \
	../configure \
	  --enable-win64 \
		--prefix=/usr \
		--libdir=/usr/lib64 \
		--localstatedir=/var \
		--sysconfdir=/etc \
		--mandir=/usr/man \
		--with-x \
		--with-gnutls \
		--${do_opengl}-opengl \
		--program-prefix= \
		--program-suffix= \
		--disable-tests \
		--build=$BUILD_ARCH

	make depend
	make
	make install DESTDIR=$PKG
	cd ..
fi

if [ -z "$NOWIN32" ]; then
	mkdir wine32
	cd wine32

	export PKG_CONFIG_PATH="/usr/lib/pkgconfig:$PKG_CONFIG_PATH"

	LDFLAGS="-L/usr/lib -ldl" \
	CFLAGS="$SLKCFLAGS" \
	CXXFLAGS="$SLKCFLAGS" \
	../configure \
		$wine64 \
		--prefix=/usr \
		--libdir=/usr/lib \
		--localstatedir=/var \
		--sysconfdir=/etc \
		--mandir=/usr/man \
		--with-x \
		--with-gnutls \
		--${do_opengl}-opengl \
		--program-prefix= \
		--program-suffix= \
		--disable-tests \
		--build=$BUILD_ARCH

	make depend
	make
	make install DESTDIR=$PKG
	cd ..
fi

# Strip Binaries
find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

# Add manual
find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

# Add font configuration:
install -d $PKG/etc/fonts/conf.{avail,d}
install -m644 $CWD/30-win32-aliases.conf $PKG/etc/fonts/conf.avail
ln -sf /etc/fonts/conf.avail/30-win32-aliases.conf $PKG/etc/fonts/conf.d/30-win32-aliases.conf

# Create Wine menu structure:
mkdir -p $PKG/etc/xdg/menus/applications-merged
cp $CWD/wine.menu $PKG/etc/xdg/menus/applications-merged

# Add a desktop menu for winecfg, wine-uninstaller and wine-browsedrive:
mkdir -p $PKG/usr/share/{applications,icons/hicolor/scalable/apps,pixmaps}

convert $CWD/wine.svg -scale 64 $PKG/usr/share/pixmaps/wine.png
cp $CWD/wine.svg $PKG/usr/share/icons/hicolor/scalable/apps/

convert $CWD/winecfg.png -scale 64 $PKG/usr/share/pixmaps/winecfg.png
convert $CWD/winecfg.png -scale 64 $PKG/usr/share/pixmaps/folder-wine.png
convert $CWD/winecfg.png -scale 64 $PKG/usr/share/pixmaps/wine-uninstaller.png

cp programs/winecfg/winecfg.svg $PKG/usr/share/icons/hicolor/scalable/apps/
cp $CWD/*.desktop $PKG/usr/share/applications/


mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp $DOCS $FONTS_LICENSE $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
